{"ast":null,"code":"import _classCallCheck from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderError = function (_ref) {\n      var error = _ref.error,\n          touched = _ref.touched;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error mesasge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, error));\n      }\n    };\n\n    _this.renderInput = function (_ref2) {\n      var input = _ref2.input,\n          label = _ref2.label,\n          meta = _ref2.meta;\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {\n      _this.props.createStream(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"ui form error\",\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You Must Enter a Title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You Must Enter a Description';\n  }\n\n  return errors;\n};\n\nvar formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream: createStream\n})(formWrapped);","map":{"version":3,"sources":["/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","connect","createStream","StreamCreate","renderError","error","touched","renderInput","input","label","meta","className","onSubmit","formValues","props","handleSubmit","Component","validate","errors","title","description","formWrapped","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,Y;;;;;;;;;;;;;;;;;;UACJC,W,GAAc,gBAAsB;AAAA,UAApBC,KAAoB,QAApBA,KAAoB;AAAA,UAAbC,OAAa,QAAbA,OAAa;;AAClC,UAAIA,OAAO,IAAID,KAAf,EAAqB;AACnB,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBA,KAAzB,CADF,CADF;AAKD;AACF,K;;UAEDE,W,GAAc,iBAA2B;AAAA,UAAzBC,KAAyB,SAAzBA,KAAyB;AAAA,UAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,UAAXC,IAAW,SAAXA,IAAW;AACvC,UAAMC,SAAS,mBAAaD,IAAI,CAACL,KAAL,IAAcK,IAAI,CAACJ,OAAnB,GAA6B,OAA7B,GAAuC,EAApD,CAAf;AACA,aACE;AAAK,QAAA,SAAS,EAAEK,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,KAAR,CADF,EAEE,+CAAWD,KAAX;AAAkB,QAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGG,MAAKJ,WAAL,CAAiBM,IAAjB,CAHH,CADF;AAOD,K;;UAEDE,Q,GAAW,UAACC,UAAD,EAAgB;AACzB,YAAKC,KAAL,CAAWZ,YAAX,CAAwBW,UAAxB;AACD,K;;;;;;;6BAEO;AACN,aACE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKH,QAA7B,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAE,KAAKL,WAApC;AAAiD,QAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,QAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF;AAOD;;;;EAlCwBT,KAAK,CAACkB,S;;AAqCjC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAJ,UAAU,EAAI;AAC7B,MAAMK,MAAM,GAAG,EAAf;;AAEA,MAAG,CAACL,UAAU,CAACM,KAAf,EAAsB;AACpBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AAED,MAAG,CAACN,UAAU,CAACO,WAAf,EAA4B;AAC1BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AAED,SAAOF,MAAP;AACD,CAZD;;AAcA,IAAMG,WAAW,GAAGrB,SAAS,CAAC;AAC5BsB,EAAAA,IAAI,EAAE,cADsB;AAE5BL,EAAAA,QAAQ,EAARA;AAF4B,CAAD,CAAT,CAGjBd,YAHiB,CAApB;AAKA,eAAeF,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,YAAY,EAAZA;AAAF,CAAP,CAAP,CAAgCmB,WAAhC,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\n\nclass StreamCreate extends React.Component {\n  renderError = ({error, touched}) => {\n    if (touched && error){\n      return (\n        <div className=\"ui error mesasge\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n  \n  renderInput = ({input, label, meta }) => {\n    const className =  `field ${meta.error && meta.touched ? 'error' : ''}`\n    return( \n      <div className={className}>\n        <label>{label}</label>\n        <input {...input} autoComplete=\"off\" />\n        {this.renderError(meta)}\n      </div>\n    )\n  }\n  \n  onSubmit = (formValues) => {\n    this.props.createStream(formValues);\n  }\n\n  render(){\n    return (\n      <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n        <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if(!formValues.title) {\n    errors.title = 'You Must Enter a Title';\n  }\n\n  if(!formValues.description) {\n    errors.description = 'You Must Enter a Description';\n  }\n\n  return errors;\n}\n\nconst formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);\n\nexport default connect(null, { createStream })(formWrapped);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/src/components/streams/StreamEdit.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      _this.props.editStream(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Edit a Stream\"), React.createElement(StreamForm, {\n        initialValues: _.pick(this.props.stream, 'title', 'description'),\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  editStream: editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/src/components/streams/StreamEdit.js"],"names":["_","React","connect","fetchStream","editStream","StreamForm","StreamEdit","onSubmit","formValues","props","match","params","id","stream","pick","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,U;;;;;;;;;;;;;;;;;;UAKJC,Q,GAAW,UAAAC,UAAU,EAAI;AACvB,YAAKC,KAAL,CAAWL,UAAX,CAAsBI,UAAtB;AACD,K;;;;;;;wCANkB;AACjB,WAAKC,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;;6BAMQ;AACP,UAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EAAwB;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,UAAD;AACE,QAAA,aAAa,EAAEb,CAAC,CAACc,IAAF,CAAO,KAAKL,KAAL,CAAWI,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CADjB;AAEE,QAAA,QAAQ,EAAG,KAAKN,QAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAQD;;;;EAtBsBN,KAAK,CAACc,S;;AAyB/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AAAEL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeV,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,UAAU,EAAVA;AAAf,CAAlB,CAAP,CAAsDE,UAAtD,CAAf","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  componentDidMount(){\n    this.props.fetchStream(this.props.match.params.id)\n  }\n\n  onSubmit = formValues => {\n    this.props.editStream(formValues);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading...</div>\n    }\n\n    return (\n      <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm \n          initialValues={_.pick(this.props.stream, 'title', 'description')} \n          onSubmit={ this.onSubmit } />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    _classCallCheck(this, StreamCreate);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamCreate).apply(this, arguments));\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"renderInput\",\n    value: function renderInput(_ref) {\n      var input = _ref.input,\n          label = _ref.label;\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formValues) {\n      console.log(formValues);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"ui form\",\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You Must Enter a Title';\n  }\n\n  if (!formValues.description) {\n    errrors.description = 'You Must Enter a Description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate'\n})(StreamCreate);","map":{"version":3,"sources":["/Users/ryanflores/Desktop/JavaScript/React/Streams-react-app/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","input","label","formValues","console","log","props","handleSubmit","onSubmit","renderInput","Component","validate","errors","title","description","errrors","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;IAEMC,Y;;;;;;;;;;;;;sCACuB;AAAA,UAAdC,KAAc,QAAdA,KAAc;AAAA,UAAPC,KAAO,QAAPA,KAAO;AACzB,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQA,KAAR,CADF,EAEE,+CAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AAMD;;;6BAEQE,U,EAAY;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD;;;6BAEO;AACN,aACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWC,YAAX,CAAwB,KAAKC,QAA7B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAE,KAAKC,WAApC;AAAiD,QAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,QAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF;AAOD;;;;EAtBwBZ,KAAK,CAACa,S;;AAyBjC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAR,UAAU,EAAI;AAC7B,MAAMS,MAAM,GAAG,EAAf;;AAEA,MAAG,CAACT,UAAU,CAACU,KAAf,EAAsB;AACpBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AAED,MAAG,CAACV,UAAU,CAACW,WAAf,EAA4B;AAC1BC,IAAAA,OAAO,CAACD,WAAR,GAAsB,8BAAtB;AACD;;AAED,SAAOF,MAAP;AACD,CAZD;;AAcA,eAAeb,SAAS,CAAC;AACvBiB,EAAAA,IAAI,EAAE;AADiB,CAAD,CAAT,CAEZhB,YAFY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  renderInput({input, label}){\n    return( \n      <div className=\"field\">\n        <label>{label}</label>\n        <input {...input} />\n      </div>\n    )\n  }\n  \n  onSubmit(formValues) {\n    console.log(formValues)\n  }\n\n  render(){\n    return (\n      <form className=\"ui form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n        <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if(!formValues.title) {\n    errors.title = 'You Must Enter a Title';\n  }\n\n  if(!formValues.description) {\n    errrors.description = 'You Must Enter a Description';\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  form: 'streamCreate'\n})(StreamCreate);"]},"metadata":{},"sourceType":"module"}